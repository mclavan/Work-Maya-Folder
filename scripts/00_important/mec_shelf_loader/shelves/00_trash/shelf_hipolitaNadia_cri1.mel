global proc shelf_hipolitaNadia_cri1 () {
    global string $gBuffStr;
    global string $gBuffStr0;
    global string $gBuffStr1;


    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 16
        -height 11
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Cleanup--->" 
        -enableBackground 0
        -align "center" 
        -label "Separator" 
        -labelOffset 0
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.2 
        -image "arrowDown.png" 
        -image1 "arrowDown.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "print(\"User defined macro\");" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Delete history on all objects" 
        -enableBackground 0
        -align "center" 
        -label "History" 
        -labelOffset 0
        -font "plainLabelFont" 
        -imageOverlayLabel "Hist" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.2 
        -image "menuIconEdit.png" 
        -image1 "menuIconEdit.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "import hipolitaNadia_riggingTools_cri1_1408\nreload(hipolitaNadia_riggingTools_cri1_1408)\n\n\n\nhipolitaNadia_riggingTools_cri1_1408.delete_history()" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Select an object(s)" 
        -enableBackground 0
        -align "center" 
        -label "Freeze Transformations" 
        -labelOffset 0
        -font "plainLabelFont" 
        -imageOverlayLabel "FT" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.2 
        -image "menuIconModify.png" 
        -image1 "menuIconModify.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "import hipolitaNadia_riggingTools_cri1_1408\nreload(hipolitaNadia_riggingTools_cri1_1408)\n\nhipolitaNadia_riggingTools_cri1_1408.freeze_transform()" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Select an object(s)" 
        -enableBackground 0
        -align "center" 
        -label "Center Pivot" 
        -labelOffset 0
        -font "plainLabelFont" 
        -imageOverlayLabel "CP" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.2 
        -image "menuIconModify.png" 
        -image1 "menuIconModify.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "import hipolitaNadia_riggingTools_cri1_1408\nreload(hipolitaNadia_riggingTools_cri1_1408)\n\nhipolitaNadia_riggingTools_cri1_1408.center_pivot()" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Deletes History, Freezes Transforms, Centers Pivots" 
        -enableBackground 0
        -align "center" 
        -label "NUKE" 
        -labelOffset 0
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.2 
        -image "nuke.png" 
        -image1 "nuke.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "import pymel.core as pm\n\npm.delete(all=True, constructionHistory=True)\npm.makeIdentity(apply=True, t=1, r=1, s=1, n=0)\npm.xform(centerPivots=True) " 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 16
        -height 11
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Joint Tools-->" 
        -enableBackground 0
        -align "center" 
        -label "Separator" 
        -labelOffset 0
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.2 
        -image "arrowDown.png" 
        -image1 "arrowDown.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "print(\"User defined macro\");" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Customize the joint scale" 
        -enableBackground 0
        -align "center" 
        -label "Joint Size..." 
        -labelOffset 0
        -font "plainLabelFont" 
        -imageOverlayLabel "JS" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.25 
        -image "menuIconDisplay.png" 
        -image1 "menuIconDisplay.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "jdsWin" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Click to place joint. Click on existing joint to add to skeleton. Click-Drag to position joint." 
        -enableBackground 0
        -align "center" 
        -label "Joint Tool" 
        -labelOffset 0
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.25 
        -image "kinJoint.png" 
        -image1 "kinJoint.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "JointTool" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 16
        -height 11
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Icons--->" 
        -enableBackground 0
        -align "center" 
        -label "Separator" 
        -labelOffset 0
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.2 
        -image "arrowDown.png" 
        -image1 "arrowDown.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "print(\"User defined macro\");" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "creates a square icon" 
        -enableBackground 0
        -align "center" 
        -label "square" 
        -labelOffset 0
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0.266667 0.266667 0.266667 0.2 
        -image "square.png" 
        -image1 "square.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "curve -d 1 -p -1.29672 0 -1.573353 -p 1.29672 0 -1.573353 -p 1.29672 0 1.573353 -p -1.29672 0 1.573353 -p -1.29672 0 -1.573353 -k 0 -k 1 -k 2 -k 3 -k 4" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "creates circle icon" 
        -enableBackground 0
        -align "center" 
        -label "circle" 
        -labelOffset 0
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0.266667 0.266667 0.266667 0.2 
        -image "circle.png" 
        -image1 "circle.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "import pymel.core as pm\npm.circle(normal=[0,1,0], radius=2)" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 0
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "creates cube icon" 
        -enableBackground 0
        -align "center" 
        -label "cube" 
        -labelOffset 0
        -font "plainLabelFont" 
        -imageOverlayLabel "cube" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0.266667 0.266667 0.266667 0.3 
        -image "cube.png" 
        -image1 "cube.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "curve -d 1 -p -1.049712 0.748059 -1.019445 -p -1.049712 0.748059 1.019445 -p -1.049712 -0.748059 1.019445 -p -1.049712 -0.748059 -1.019445 -p -1.049712 0.748059 -1.019445 -p 1.049712 0.748059 -1.019445 -p 1.049712 -0.748059 -1.019445 -p -1.049712 -0.748059 -1.019445 -p -1.049712 0.748059 -1.019445 -p 1.049712 0.748059 -1.019445 -p 1.049712 0.748059 1.019445 -p 1.049712 -0.748059 1.019445 -p 1.049712 -0.748059 -1.019445 -p 1.049712 0.748059 -1.019445 -p 1.049712 0.748059 1.019445 -p -1.049712 0.748059 1.019445 -p -1.049712 -0.748059 1.019445 -p 1.049712 -0.748059 1.019445 -p 1.049712 0.748059 1.019445 -k 0 -k 1 -k 2 -k 3 -k 4 -k 5 -k 6 -k 7 -k 8 -k 9 -k 10 -k 11 -k 12 -k 13 -k 14 -k 15 -k 16 -k 17 -k 18 ;\n" 
        -sourceType "mel" 
        -commandRepeatable 0
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Creates a blue control" 
        -enableBackground 0
        -align "center" 
        -label "Blue Control" 
        -labelOffset 0
        -font "plainLabelFont" 
        -imageOverlayLabel "BLUE" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.2 
        -image "circle.png" 
        -image1 "circle.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "import pymel.core as pm\n\npm.circle(normal=[0,1,0], radius=2)\nselected = pm.ls(selection=True)\nicon = selected[0]\n\n\nicon.overrideEnabled.set(1)\nblue = 6\nicon.overrideColor.set(blue)\n\n# pm.circle(normal=[0,1,0], radius=2)" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Creates a red control" 
        -enableBackground 0
        -align "center" 
        -label "Red Control" 
        -labelOffset 0
        -font "plainLabelFont" 
        -imageOverlayLabel "RED" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.2 
        -image "circle.png" 
        -image1 "circle.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "import pymel.core as pm\n\npm.circle(normal=[0,1,0], radius=2)\nselected = pm.ls(selection=True)\nicon = selected[0]\n\n\nicon.overrideEnabled.set(1)\nred = 4\nicon.overrideColor.set(red)" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Creates a Yellow Control" 
        -enableBackground 0
        -align "center" 
        -label "Yellow Control" 
        -labelOffset 0
        -font "plainLabelFont" 
        -imageOverlayLabel "YELL" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.2 
        -image "circle.png" 
        -image1 "circle.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "import pymel.core as pm\n\npm.circle(normal=[0,1,0], radius=2)\nselected = pm.ls(selection=True)\nicon = selected[0]\n\n\nicon.overrideEnabled.set(1)\nyellow = 17\nicon.overrideColor.set(yellow)" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Creates an Arrow control" 
        -enableBackground 0
        -align "center" 
        -label "Arrow Control" 
        -labelOffset 0
        -font "plainLabelFont" 
        -imageOverlayLabel "ARW" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.2 
        -image "aselect.png" 
        -image1 "aselect.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "import pymel.core as pm\n\n\nmel_line='curve -d 1 -p -0.540481 0 -3.044861 -p 0.424182 0 -3.046763 -p 0.428595 0 -0.809008 -p 1.180086 0 -1.125873 -p -0.0310796 0 1.05049 -p -1.242245 0 -1.125873 -p -0.536068 0 -0.807105 -p -0.540481 0 -3.044861 -k 0 -k 1 -k 2 -k 3 -k 4 -k 5 -k 6 -k 7' ;\npm.mel.eval(mel_line)\n\n" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 16
        -height 11
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Curves--->" 
        -enableBackground 0
        -align "center" 
        -label "Separator" 
        -labelOffset 0
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.2 
        -image "arrowDown.png" 
        -image1 "arrowDown.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "print(\"User defined macro\");" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "import pymel.core as pm\n\nselected=pm.ls(selection=True)\nfirst_selected=selected[0]\n\n# pm.cluster()\n# select all CVs command\npm.select(first_selected.cv[:], r=True)\n\n# just a : with nothing means everything\n# To grab every other CV, ::2 (Python list range [slice])\n" 
        -enableBackground 0
        -align "center" 
        -label "CVa" 
        -labelOffset 0
        -font "plainLabelFont" 
        -imageOverlayLabel "CVa" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 1 
        -image "curveCV.png" 
        -image1 "curveCV.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "import pymel.core as pm\n\nselected=pm.ls(selection=True)\nfirst_selected=selected[0]\n\n# pm.cluster()\n# select all CVs command\npm.select(first_selected.cv[:], r=True)\n\n# just a : with nothing means everything\n# To grab every other CV, ::2 (Python list range [slice])\n" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "import pymel.core as pm\n\nselected=pm.ls(selection=True)\nfirst_selected=selected[0]\n\n# pm.cluster()\n# select all CVs command\npm.select(first_selected.cv[::2], r=True)\n\n# just a : with nothing means everything\n# To grab every other CV, ::2 (Python list range [slice])\n" 
        -enableBackground 0
        -align "center" 
        -label "CVo" 
        -labelOffset 0
        -font "plainLabelFont" 
        -imageOverlayLabel "CVo" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 1 
        -image "curveEP.png" 
        -image1 "curveEP.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "import pymel.core as pm\n\nselected=pm.ls(selection=True)\nfirst_selected=selected[0]\n\n# pm.cluster()\n# select all CVs command\npm.select(first_selected.cv[::2], r=True)\n\n# just a : with nothing means everything\n# To grab every other CV, ::2 (Python list range [slice])\n" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "import pymel.core as pm\n\nselected=pm.ls(selection=True)\nfirst_selected=selected[0]\n\n# pm.cluster()\n# select all CVs command\n# pm.select(first_selected.cv[::2], r=True)\n\n# just a : with nothing means everything\n# To grab every other CV, ::2 (Python list range [slice])\n\nfor current_cv in first_selected.cv:\n    # Apply cluster to current cv\n    pm.cluster(current_cv)\n" 
        -enableBackground 0
        -align "center" 
        -label "cluster" 
        -labelOffset 0
        -font "plainLabelFont" 
        -imageOverlayLabel "Clust" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.2 
        -image "cluster.png" 
        -image1 "cluster.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "import pymel.core as pm\n\nselected=pm.ls(selection=True)\nfirst_selected=selected[0]\n\n# pm.cluster()\n# select all CVs command\n# pm.select(first_selected.cv[::2], r=True)\n\n# just a : with nothing means everything\n# To grab every other CV, ::2 (Python list range [slice])\n\nfor current_cv in first_selected.cv:\n    # Apply cluster to current cv\n    pm.cluster(current_cv)\n" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 16
        -height 11
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Attributes-->" 
        -enableBackground 0
        -align "center" 
        -label "Separator" 
        -labelOffset 0
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.2 
        -image "arrowDown.png" 
        -image1 "arrowDown.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "print(\"User defined macro\");" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Locks Translates" 
        -enableBackground 0
        -align "center" 
        -label "Lock Translate" 
        -labelOffset 0
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.2 
        -image "lockT.png" 
        -image1 "lockT.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "import hipolitaNadia_riggingTools_cri1_1408\nreload(hipolitaNadia_riggingTools_cri1_1408)\n\n\n\nhipolitaNadia_riggingTools_cri1_1408.lock_hide_trans()" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Locks rotations" 
        -enableBackground 0
        -align "center" 
        -label "Lock Rotation" 
        -labelOffset 0
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.2 
        -image "lockR.png" 
        -image1 "lockR.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "import hipolitaNadia_riggingTools_cri1_1408\nreload(hipolitaNadia_riggingTools_cri1_1408)\n\n\n\nhipolitaNadia_riggingTools_cri1_1408.lock_hide_rotate()" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 41
        -height 41
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Unlocks and Shows Attributes" 
        -enableBackground 0
        -align "center" 
        -label "Unlock and Show" 
        -labelOffset 0
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 1 
        -image "unlock2.png" 
        -image1 "unlock2.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "import hipolitaNadia_riggingTools_cri1_1408\nreload(hipolitaNadia_riggingTools_cri1_1408)\n\n\n\nhipolitaNadia_riggingTools_cri1_1408.unlock_and_show()" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Creates Hand Attributes for 4 fingers" 
        -enableBackground 0
        -align "center" 
        -label "Hand Attributes" 
        -labelOffset 0
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0 
        -image "hand4.png" 
        -image1 "hand4.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "import hipolitaNadia_riggingTools_cri1_1408\nreload(hipolitaNadia_riggingTools_cri1_1408)\n\n\n\nhipolitaNadia_riggingTools_cri1_1408.hand_attribute_4()" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Creates the Hand Attributes for a 3 Finger System" 
        -enableBackground 0
        -align "center" 
        -label "Hand Attributes" 
        -labelOffset 0
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0 
        -image "hand3.png" 
        -image1 "hand3.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "import hipolitaNadia_riggingTools_cri1_1408\nreload(hipolitaNadia_riggingTools_cri1_1408)\n\n\n\nhipolitaNadia_riggingTools_cri1_1408.hand_attribute_3()" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 16
        -height 11
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Hierarchy Tools-->" 
        -enableBackground 0
        -align "center" 
        -label "Separator" 
        -labelOffset 0
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.2 
        -image "arrowDown.png" 
        -image1 "arrowDown.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "print(\"User defined macro\");" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Creates a locally oriented control for joints" 
        -enableBackground 0
        -align "center" 
        -label "Priming Tool" 
        -labelOffset 0
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.2 
        -image "prime.png" 
        -image1 "prime.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "import hipolitaNadia_riggingTools_cri1_1408\nreload(hipolitaNadia_riggingTools_cri1_1408)\n\n\n\nhipolitaNadia_riggingTools_cri1_1408.priming_tool()" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "creates a local pad for joints" 
        -enableBackground 0
        -align "center" 
        -label "Padding Tool" 
        -labelOffset 0
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.2 
        -image "pad.png" 
        -image1 "pad.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "import hipolitaNadia_riggingTools_cri1_1408\nreload(hipolitaNadia_riggingTools_cri1_1408)\n\n\n\nhipolitaNadia_riggingTools_cri1_1408.padding_tool()" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Renames selected objects" 
        -enableBackground 0
        -align "center" 
        -label "Renaming Tool" 
        -labelOffset 0
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.2 
        -image "name.png" 
        -image1 "name.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "print(\"User defined macro\");" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
        -mi "Joint Renamer" ( "import hipolitaNadia_riggingTools_cri1_1408\nreload(hipolitaNadia_riggingTools_cri1_1408)\n\n\n\nhipolitaNadia_riggingTools_cri1_1408.joint_renamer()" )
        -mip 0
        -mi "Control Renamer" ( "import hipolitaNadia_riggingTools_cri1_1408\nreload(hipolitaNadia_riggingTools_cri1_1408)\n\n\n\nhipolitaNadia_riggingTools_cri1_1408.arm_control_renamer()" )
        -mip 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 16
        -height 11
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Modeling Tools--->" 
        -enableBackground 0
        -align "center" 
        -label "Separator" 
        -labelOffset 0
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.2 
        -image "arrowDown.png" 
        -image1 "arrowDown.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "print(\"User defined macro\");" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Combine the selected polygon objects into one single object to allow operations such as merges or face trims" 
        -enableBackground 0
        -align "center" 
        -label "Combine" 
        -labelOffset 0
        -font "plainLabelFont" 
        -imageOverlayLabel "CMB" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.2 
        -image "polyUnite.png" 
        -image1 "polyUnite.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "import pymel.core as pm\npm.mel.CombinePolygons()\n" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Separate the selected polygon object shells or the shells of any selected faces from the object into distinct objects" 
        -enableBackground 0
        -align "center" 
        -label "Separate" 
        -labelOffset 0
        -font "plainLabelFont" 
        -imageOverlayLabel "SEP" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.2 
        -image "polySeparate.png" 
        -image1 "polySeparate.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "import pymel.core as pm\n\npm.mel.SeparatePolygon()" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Detach selected components" 
        -enableBackground 0
        -align "center" 
        -label "Detach Component" 
        -labelOffset 0
        -font "plainLabelFont" 
        -imageOverlayLabel "DET" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.2 
        -image "polySplitVertex.png" 
        -image1 "polySplitVertex.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "import pymel.core as pm\n\npm.mel.DetachComponent()" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Extract the currently selected faces from their shell and shows a manipulator to adjust their offset" 
        -enableBackground 0
        -align "center" 
        -label "Extract" 
        -labelOffset 0
        -font "plainLabelFont" 
        -imageOverlayLabel "EXT" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.2 
        -image "polyChipOff.png" 
        -image1 "polyChipOff.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "import pymel.core as pm\n\npm.mel.ExtractFace()" 
        -sourceType "python" 
        -doubleClickCommand "ExtractFaceOptions" 
        -commandRepeatable 1
        -flat 1
    ;

} 
