global proc shelf_sorensonBrandon_cri1_1408 () {
    global string $gBuffStr;
    global string $gBuffStr0;
    global string $gBuffStr1;


    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "moves cp to bounding box" 
        -enableBackground 0
        -align "center" 
        -label "Center Pivot" 
        -labelOffset 0
        -font "plainLabelFont" 
        -imageOverlayLabel "CP" 
        -overlayLabelColor 0 0.5 0.5 
        -overlayLabelBackColor 0 0 0 1 
        -image "menuIconModify.png" 
        -image1 "menuIconModify.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "import pymel.core as pm\npm.xform(cp=True)" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Freeze Transforms " 
        -enableBackground 0
        -align "center" 
        -label "Freeze Transformations" 
        -labelOffset 0
        -font "plainLabelFont" 
        -imageOverlayLabel "FT" 
        -overlayLabelColor 0 0.5 0.5 
        -overlayLabelBackColor 0 0 0 1 
        -image "menuIconModify.png" 
        -image1 "menuIconModify.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "import pymel.core as pm\npm.makeIdentity( apply=True, t=1, r=1, s=1, n=0, pn=1)\n" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Delete construction history on the selected object(s)" 
        -enableBackground 0
        -align "center" 
        -label "History" 
        -labelOffset 0
        -font "plainLabelFont" 
        -imageOverlayLabel "Hist" 
        -overlayLabelColor 0 0.5 0.5 
        -overlayLabelBackColor 0 0 0 1 
        -image "menuIconEdit.png" 
        -image1 "menuIconEdit.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "import pymel.core as pm\npm.delete(ch=True)" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "CenterPivot,Freeze,History" 
        -enableBackground 0
        -align "center" 
        -label "NUKE" 
        -labelOffset 0
        -font "plainLabelFont" 
        -imageOverlayLabel "FCH" 
        -overlayLabelColor 0 0.5 0.5 
        -overlayLabelBackColor 0 0 0 1 
        -image "blendShape.png" 
        -image1 "blendShape.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "import pymel.core as pm\npm.xform(cp=True)\npm.makeIdentity( apply=True, t=1, r=1, s=1, n=0, pn=1)\npm.delete(ch=True)" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 19
        -height 19
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Left Cleanup Tools,  Right Icon Creators" 
        -enableBackground 0
        -align "center" 
        -label "Divider" 
        -labelOffset 0
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.2 
        -image "channels.png" 
        -image1 "channels.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "print(\"User defined macro\");" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Makes a Circle icon" 
        -enableBackground 0
        -align "center" 
        -label "Circle" 
        -labelOffset 0
        -font "plainLabelFont" 
        -imageOverlayLabel "circle" 
        -overlayLabelColor 0 0.5 0 
        -overlayLabelBackColor 0 0 0 1 
        -image "circle.png" 
        -image1 "circle.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "import pymel.core as pm\npm.circle(c=[0,0,0], nr=[0,1,0], sw=360, r=1, d=3, ut=0, tol=0, s=8, ch=1)\n" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Makes a Square icon" 
        -enableBackground 0
        -align "center" 
        -label "Square" 
        -labelOffset 0
        -font "plainLabelFont" 
        -imageOverlayLabel "Squ" 
        -overlayLabelColor 0 0.5 0 
        -overlayLabelBackColor 0 0 0 1 
        -image "square.png" 
        -image1 "square.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "import pymel.core as pm\npm.curve(d=1,p=[[0,0,0],[0,0,5],[5,0,5],[5,0,0],[0,0,0]], k=[0,1,2,3,4])" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Makes an Arrow icon" 
        -enableBackground 0
        -align "center" 
        -label "Arrow" 
        -labelOffset 0
        -font "plainLabelFont" 
        -imageOverlayLabel "Arrow" 
        -overlayLabelColor 0 0.5 0 
        -overlayLabelBackColor 0 0 0 1 
        -image "camera.png" 
        -image1 "camera.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "import pymel.core as pm\n\npm.curve(d=1, p=[[2,0,1],[2,0,-1],[0,0,-1],[0,0,-2],[-2,0,0],[0,0,2],[0,0,1],[2,0,1]], k=[0,1,2,3,4,5,6,7])" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Makes a Cube Icon" 
        -enableBackground 0
        -align "center" 
        -label "Cube" 
        -labelOffset 0
        -font "plainLabelFont" 
        -imageOverlayLabel "Cube" 
        -overlayLabelColor 0 0.5 0 
        -overlayLabelBackColor 0 0 0 1 
        -image "cube.png" 
        -image1 "cube.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "import pymel.core as pm\n\npm.curve(d=1, p=[[0.5,0.5,0.5],[0.5,-0.5,0.5],[0.5,-0.5,-0.5],[0.5,0.5,-0.5],[0.5,0.5,0.5],[-0.5,0.5,0.5],[-0.5,-0.5,0.5],[0.5,-0.5,0.5],[0.5,-0.5,-0.5],[-0.5,-0.5,-0.5],[-0.5,-0.5,0.5],[-0.5,0.5,0.5],[-0.5,0.5,-0.5],[-0.5,-0.5,-0.5],[0.5,-0.5,-0.5],[0.5,0.5,-0.5],[-0.5,0.5,-0.5]], k=[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16])\n" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Select all the CV in an icon" 
        -enableBackground 0
        -align "center" 
        -label "CV" 
        -labelOffset 0
        -font "plainLabelFont" 
        -imageOverlayLabel "CV" 
        -overlayLabelColor 0 0.5 0 
        -overlayLabelBackColor 0 0 0 1 
        -image "curveEP.png" 
        -image1 "curveEP.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "import pymel.core as pm\n\nselected = pm.ls(selection=True)\nfirst_selected = selected[0]\n\npm.select(first_selected.cv[:], r=True)\n" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 19
        -height 19
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Left Icon Creators, Right Constraints" 
        -enableBackground 0
        -align "center" 
        -label "Divider" 
        -labelOffset 0
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.2 
        -image "channels.png" 
        -image1 "channels.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "print(\"User defined macro\");" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Parent Constraint, Double click maintains offset" 
        -enableBackground 0
        -align "center" 
        -label "parCon" 
        -labelOffset 0
        -font "plainLabelFont" 
        -imageOverlayLabel "parCon" 
        -overlayLabelColor 0 0 1 
        -overlayLabelBackColor 0 0 0 1 
        -image "parentConstraint.png" 
        -image1 "parentConstraint.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "import pymel.core as pm\n\npm.parentConstraint()" 
        -sourceType "python" 
        -doubleClickCommand "import pymel.core as pm\n\npm.parentConstraint(mo=True)" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Orient Constraint" 
        -enableBackground 0
        -align "center" 
        -label "oriCon" 
        -labelOffset 0
        -font "plainLabelFont" 
        -imageOverlayLabel "oriCon" 
        -overlayLabelColor 0 0 1 
        -overlayLabelBackColor 0 0 0 1 
        -image "orientConstraint.png" 
        -image1 "orientConstraint.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "import pymel.core as pm\n\npm.orientConstraint()\n\n" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Pole Constraint" 
        -enableBackground 0
        -align "center" 
        -label "polCon" 
        -labelOffset 0
        -font "plainLabelFont" 
        -imageOverlayLabel "polCon" 
        -overlayLabelColor 0 0 1 
        -overlayLabelBackColor 0 0 0 1 
        -image "poleVectorConstraint.png" 
        -image1 "poleVectorConstraint.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "import pymel.core as pm\n\npm.poleVectorConstraint()" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 19
        -height 19
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Left Constraints,  Right Attributes " 
        -enableBackground 0
        -align "center" 
        -label "Divider" 
        -labelOffset 0
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.2 
        -image "channels.png" 
        -image1 "channels.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "print(\"User defined macro\");" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Add Enum Attribute" 
        -enableBackground 0
        -align "center" 
        -label "EnAt" 
        -labelOffset 0
        -font "plainLabelFont" 
        -imageOverlayLabel "EnAt" 
        -overlayLabelColor 0.5 0 0.5 
        -overlayLabelBackColor 0 0 0 1 
        -image "pythonFamily.png" 
        -image1 "pythonFamily.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "import pymel.core as pm\n\n# getting the selected object\nselected = pm.ls(selection=True)\nfirst_selected = selected[0]\n\nname = raw_input()\n\nfirst_selected.addAttr(name, keyable=True, at='enum', en=\"-----------:\")\nfirst_selected.setAttr(name, lock=True)\n" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Add Float Attribute" 
        -enableBackground 0
        -align "center" 
        -label "addAt" 
        -labelOffset 0
        -font "plainLabelFont" 
        -imageOverlayLabel "FlAt" 
        -overlayLabelColor 0.5 0 0.5 
        -overlayLabelBackColor 0 0 0 1 
        -image "pythonFamily.png" 
        -image1 "pythonFamily.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "import pymel.core as pm\n\n# getting the selected object\nselected = pm.ls(selection=True)\nfirst_selected = selected[0]\n\nfirst_selected.addAttr(raw_input(), keyable=True)" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Creat the Attributs For Hand icons" 
        -enableBackground 0
        -align "center" 
        -label "Fingers" 
        -labelOffset 0
        -font "plainLabelFont" 
        -imageOverlayLabel "Fingers" 
        -overlayLabelColor 0.5 0 0.5 
        -overlayLabelBackColor 0 0 0 1 
        -image "pythonFamily.png" 
        -image1 "pythonFamily.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "import pymel.core as pm\n\n#getting the selected object\nselected = pm.ls(selection=True)\nfirst_selected = selected[0]\n\nfirst_selected.addAttr('FINGERS', keyable=True, at= 'enum', en='----------:')\nfirst_selected.FINGERS.set(lock=True)\nfirst_selected.addAttr('CURL', keyable=True, at= 'enum', en='----------:')\nfirst_selected.CURL.set(lock=True)\nfirst_selected.addAttr('index_curl', keyable=True)\nfirst_selected.addAttr('middle_curl', keyable=True)\nfirst_selected.addAttr('pinky_curl', keyable=True)\nfirst_selected.addAttr('SPREAD', keyable=True, at= 'enum', en='----------:')\nfirst_selected.SPREAD.set(lock=True)\nfirst_selected.addAttr('index_spread', keyable=True)\nfirst_selected.addAttr('middle_spread', keyable=True)\nfirst_selected.addAttr('pinky_spread', keyable=True)\nfirst_selected.addAttr('THUMB', keyable=True, at= 'enum', en='----------:')\nfirst_selected.THUMB.set(lock=True)\nfirst_selected.addAttr('thumb_curl', keyable=True)\nfirst_selected.addAttr('thumb_drop', keyable=True)" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 19
        -height 19
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Left Attributes, Right Lock and Hides" 
        -enableBackground 0
        -align "center" 
        -label "Divider" 
        -labelOffset 0
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.2 
        -image "channels.png" 
        -image1 "channels.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "print(\"User defined macro\");" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Unlock and hide all" 
        -enableBackground 0
        -align "center" 
        -label "unLHall" 
        -labelOffset 0
        -font "plainLabelFont" 
        -imageOverlayLabel "unLH" 
        -overlayLabelColor 0.5 0.236408 0 
        -overlayLabelBackColor 0 0 0 1 
        -image "bubbles.png" 
        -image1 "bubbles.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "import pymel.core as pm\n\n# getting the selected object\nselected_controls = pm.ls(selection=True)\ncontrol_icon = selected_controls[0]\nprint 'selected_control', control_icon\n\ncontrol_icon.tx.set(lock=False, keyable=True)\ncontrol_icon.ty.set(lock=False, keyable=True)\ncontrol_icon.tz.set(lock=False, keyable=True)\ncontrol_icon.rx.set(lock=False, keyable=True)\ncontrol_icon.ry.set(lock=False, keyable=True)\ncontrol_icon.rz.set(lock=False, keyable=True)\ncontrol_icon.sx.set(lock=False, keyable=True)\ncontrol_icon.sy.set(lock=False, keyable=True)\ncontrol_icon.sz.set(lock=False, keyable=True)\ncontrol_icon.v.set(lock=False, keyable=True)" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Lock and Hide all but Rotation" 
        -enableBackground 0
        -align "center" 
        -label "LH-R" 
        -labelOffset 0
        -font "plainLabelFont" 
        -imageOverlayLabel "LH-R" 
        -overlayLabelColor 0.5 0.236408 0 
        -overlayLabelBackColor 0 0 0 1 
        -image "bubbles.png" 
        -image1 "bubbles.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "import pymel.core as pm\n\n# getting the selected object\nselected_controls = pm.ls(selection=True)\ncontrol_icon = selected_controls[0]\nprint 'selected_control', control_icon\n\ncontrol_icon.tx.set(lock=True, keyable=False)\ncontrol_icon.ty.set(lock=True, keyable=False)\ncontrol_icon.tz.set(lock=True, keyable=False)\ncontrol_icon.rx.set(lock=False, keyable=True)\ncontrol_icon.ry.set(lock=False, keyable=True)\ncontrol_icon.rz.set(lock=False, keyable=True)\ncontrol_icon.sx.set(lock=True, keyable=False)\ncontrol_icon.sy.set(lock=True, keyable=False)\ncontrol_icon.sz.set(lock=True, keyable=False)\ncontrol_icon.v.set(lock=True, keyable=False)\n\n# Rotations only" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Lock and Hide all but Translation" 
        -enableBackground 0
        -align "center" 
        -label "LH-T" 
        -labelOffset 0
        -font "plainLabelFont" 
        -imageOverlayLabel "LH-T" 
        -overlayLabelColor 0.5 0.236408 0 
        -overlayLabelBackColor 0 0 0 1 
        -image "bubbles.png" 
        -image1 "bubbles.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "import pymel.core as pm\n\n# getting the selected object\nselected_controls = pm.ls(selection=True)\ncontrol_icon = selected_controls[0]\nprint 'selected_control', control_icon\n\ncontrol_icon.tx.set(lock=False, keyable=True)\ncontrol_icon.ty.set(lock=False, keyable=True)\ncontrol_icon.tz.set(lock=False, keyable=True)\ncontrol_icon.rx.set(lock=True, keyable=False)\ncontrol_icon.ry.set(lock=True, keyable=False)\ncontrol_icon.rz.set(lock=True, keyable=False)\ncontrol_icon.sx.set(lock=True, keyable=False)\ncontrol_icon.sy.set(lock=True, keyable=False)\ncontrol_icon.sz.set(lock=True, keyable=False)\ncontrol_icon.v.set(lock=True, keyable=False)\n\n# Translations only" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 19
        -height 19
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Left Lock and Hides, Right icon Colorizer" 
        -enableBackground 0
        -align "center" 
        -label "Divider" 
        -labelOffset 0
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.2 
        -image "channels.png" 
        -image1 "channels.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "print(\"User defined macro\");" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "import pymel.core as pm\n\nselected = pm.ls(selection=True)\nfirst_selected = selected[0]\n\nfirst_selected.overrideEnabled.set(1)" 
        -enableBackground 0
        -align "center" 
        -label "Blue" 
        -labelOffset 0
        -font "plainLabelFont" 
        -imageOverlayLabel "Blue" 
        -overlayLabelColor 0 0 0 
        -overlayLabelBackColor 0 0 1 1 
        -image "circle.png" 
        -image1 "circle.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "import pymel.core as pm\n\nselected = pm.ls(selection=True)\n\nfor each in selected:\n\n\teach.overrideEnabled.set(1)\n\teach.overrideColor.set(6)" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "import pymel.core as pm\n\nselected = pm.ls(selection=True)\nfirst_selected = selected[0]\n\nfirst_selected.overrideEnabled.set(17)" 
        -enableBackground 0
        -align "center" 
        -label "Yellow" 
        -labelOffset 0
        -font "plainLabelFont" 
        -imageOverlayLabel "Yellow" 
        -overlayLabelColor 0 0 0 
        -overlayLabelBackColor 1 1 0 1 
        -image "circle.png" 
        -image1 "circle.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "import pymel.core as pm\n\nselected = pm.ls(selection=True)\n\nfor each in selected:\n\n\teach.overrideEnabled.set(1)\n\teach.overrideColor.set(17)" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "import pymel.core as pm\n\nselected = pm.ls(selection=True)\nfirst_selected = selected[0]\n\nfirst_selected.overrideEnabled.set(13)" 
        -enableBackground 0
        -align "center" 
        -label "Red" 
        -labelOffset 0
        -font "plainLabelFont" 
        -imageOverlayLabel "Red" 
        -overlayLabelColor 0 0 0 
        -overlayLabelBackColor 1 0 0 1 
        -image "circle.png" 
        -image1 "circle.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "import pymel.core as pm\n\nselected = pm.ls(selection=True)\n\nfor each in selected:\n\n\teach.overrideEnabled.set(1)\n\teach.overrideColor.set(13)" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 19
        -height 19
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Left icon Colorizer ,  Right IKs" 
        -enableBackground 0
        -align "center" 
        -label "Divider" 
        -labelOffset 0
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.2 
        -image "channels.png" 
        -image1 "channels.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "print(\"User defined macro\");" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "import pymel.core as pm\n\npm.ikHandle(sol= 'ikRPsolver')\n" 
        -enableBackground 0
        -align "center" 
        -label "IKRP" 
        -labelOffset 0
        -font "plainLabelFont" 
        -imageOverlayLabel "IKRP" 
        -overlayLabelColor 0.5 0.00868332 0 
        -overlayLabelBackColor 0 0 0 1 
        -image "kinHandle.png" 
        -image1 "kinHandle.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "import pymel.core as pm\n\npm.ikHandle(sol= 'ikRPsolver')\n" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "import pymel.core as pm\n\npm.ikHandle(sol= 'ikSCsolver')" 
        -enableBackground 0
        -align "center" 
        -label "IKSC" 
        -labelOffset 0
        -font "plainLabelFont" 
        -imageOverlayLabel "IKSC" 
        -overlayLabelColor 0.5 0.00868332 0 
        -overlayLabelBackColor 0 0 0 1 
        -image "kinHandle.png" 
        -image1 "kinHandle.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "import pymel.core as pm\n\npm.ikHandle(sol= 'ikSCsolver')" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 19
        -height 19
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Left IKs,  Right cluster and joint renamer" 
        -enableBackground 0
        -align "center" 
        -label "Divider" 
        -labelOffset 0
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.2 
        -image "channels.png" 
        -image1 "channels.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "print(\"User defined macro\");" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "User Script" 
        -enableBackground 0
        -align "center" 
        -label "clust" 
        -labelOffset 0
        -font "plainLabelFont" 
        -imageOverlayLabel "Clust" 
        -overlayLabelColor 0.482475 0.5 0 
        -overlayLabelBackColor 0 0 0 1 
        -image "cluster.png" 
        -image1 "cluster.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "import pymel.core as pm\n\nselected = pm.ls(selection=True)\nfirst_selected = selected[0]\n\nfor current_cv in first_selected.cv:\n\tpm.cluster(current_cv)" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Joint Renamer" 
        -enableBackground 0
        -align "center" 
        -label "Jointrenamer" 
        -labelOffset 0
        -font "plainLabelFont" 
        -imageOverlayLabel "J namer" 
        -overlayLabelColor 0.482475 0.5 0 
        -overlayLabelBackColor 0 0 0 1 
        -image "addSkinInfluence.png" 
        -image1 "addSkinInfluence.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "import sorensonBrandon\nreload(sorensonBrandon)\n\nsorensonBrandon.joint_renamer()" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;

} 
