global proc shelf_shelf_reyesLuisa_cri1 () {
    global string $gBuffStr;
    global string $gBuffStr0;
    global string $gBuffStr1;


    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 34
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "import reyesLuisa_riggingTools_cri1_1405\nreload (reyesLuisa_riggingTools_cri1_1405)\nreyesLuisa_riggingTools_cri1_1405.hierarchy()\n" 
        -enableBackground 0
        -align "center" 
        -label "Hierarchy" 
        -labelOffset 0
        -font "plainLabelFont" 
        -imageOverlayLabel "Hierarchy" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.25 
        -image "pythonFamily.png" 
        -image1 "pythonFamily.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "import reyesLuisa_riggingTools_cri1_1405\nreload (reyesLuisa_riggingTools_cri1_1405)\nreyesLuisa_riggingTools_cri1_1405.hierarchy()\n" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 34
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "import reyesLuisa_riggingTools_cri1_1405\nreload (reyesLuisa_riggingTools_cri1_1405)\nreyesLuisa_riggingTools_cri1_1405.padding_tool()" 
        -enableBackground 0
        -align "center" 
        -label "Padding" 
        -labelOffset 0
        -font "plainLabelFont" 
        -imageOverlayLabel "Padding" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.25 
        -image "pythonFamily.png" 
        -image1 "pythonFamily.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "import reyesLuisa_riggingTools_cri1_1405\nreload (reyesLuisa_riggingTools_cri1_1405)\nreyesLuisa_riggingTools_cri1_1405.padding_tool()" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 34
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "import reyesLuisa_riggingTools_cri1_1405\nreload (reyesLuisa_riggingTools_cri1_1405)\nreyesLuisa_riggingTools_cri1_1405.joint_renamer()\n" 
        -enableBackground 0
        -align "center" 
        -label "JRenamer" 
        -labelOffset 0
        -font "plainLabelFont" 
        -imageOverlayLabel "JRenamer" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.25 
        -image "pythonFamily.png" 
        -image1 "pythonFamily.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "import reyesLuisa_riggingTools_cri1_1405\nreload (reyesLuisa_riggingTools_cri1_1405)\nreyesLuisa_riggingTools_cri1_1405.joint_renamer()\n" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 34
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "import reyesLuisa_riggingTools_cri1_1405\nreload (reyesLuisa_riggingTools_cri1_1405)\nreyesLuisa_riggingTools_cri1_1405.primming_tool()\n" 
        -enableBackground 0
        -align "center" 
        -label "Primming" 
        -labelOffset 0
        -font "plainLabelFont" 
        -imageOverlayLabel "Primming" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.25 
        -image "pythonFamily.png" 
        -image1 "pythonFamily.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "import reyesLuisa_riggingTools_cri1_1405\nreload (reyesLuisa_riggingTools_cri1_1405)\nreyesLuisa_riggingTools_cri1_1405.primming_tool()\n" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 34
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "import reyesLuisa_riggingTools_cri1_1405\nreload (reyesLuisa_riggingTools_cri1_1405)\nreyesLuisa_riggingTools_cri1_1405.Lock_Hide_Attr()" 
        -enableBackground 0
        -align "center" 
        -label "Lock_Hide" 
        -labelOffset 0
        -font "plainLabelFont" 
        -imageOverlayLabel "Lock_Hide" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.25 
        -image "pythonFamily.png" 
        -image1 "pythonFamily.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "import reyesLuisa_riggingTools_cri1_1405\nreload (reyesLuisa_riggingTools_cri1_1405)\nreyesLuisa_riggingTools_cri1_1405.Lock_Hide_Attr()" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 34
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "selected = pm.ls(selection=True)\nprint 'Current Selected:', selected\n\nfor current_item in selected:\ncurrent_item.tx.set(lock=False, keyable=True)\ncurrent_item.ty.set(lock=False, keyable=True)\n\n\n\ncurrent_item.tz.set(lock=False, keyable=True)\ncurrent_item.rx.set(lock=False, keyable=True)\ncurrent_item.ry.set(lock=False, keyable=True)\ncurrent_item.rz.set(lock=False, keyable=True)\ncurrent_item.sx.set(lock=False, keyable=True)\ncurrent_item.sy.set(lock=False, keyable=True)\ncurrent_item.sz.set(lock=False, keyable=True)\ncurrent_item.v.set(lock=False, keyable=True)\n" 
        -enableBackground 0
        -align "center" 
        -label "UnlockandShow" 
        -labelOffset 0
        -font "plainLabelFont" 
        -imageOverlayLabel "UnlockandShow" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.25 
        -image "pythonFamily.png" 
        -image1 "pythonFamily.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "selected = pm.ls(selection=True)\nprint 'Current Selected:', selected\n\nfor current_item in selected:\ncurrent_item.tx.set(lock=False, keyable=True)\ncurrent_item.ty.set(lock=False, keyable=True)\n\n\n\ncurrent_item.tz.set(lock=False, keyable=True)\ncurrent_item.rx.set(lock=False, keyable=True)\ncurrent_item.ry.set(lock=False, keyable=True)\ncurrent_item.rz.set(lock=False, keyable=True)\ncurrent_item.sx.set(lock=False, keyable=True)\ncurrent_item.sy.set(lock=False, keyable=True)\ncurrent_item.sz.set(lock=False, keyable=True)\ncurrent_item.v.set(lock=False, keyable=True)\n" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 34
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "selected = pm.ls(selection=True)\nprint 'Current Selected:', selected\n\nfirst_selected = selected[0]\nfirst_selected.addAttr('FINGERS',\nat='enum', en='----------:', keyable=True)\nfirst_selected.FINGERS.set(lock=True)\nfirst_selected.addAttr('CURL',\nat='enum', en='----------:', keyable=True)\nfirst_selected.CURL.set(lock=True)\nfirst_selected.addAttr('index_curl', keyable=True)\nfirst_selected.addAttr('middle_curl', keyable=True)\nfirst_selected.addAttr('pinky_curl', keyable=True)\nfirst_selected.addAttr('SPREAD',\nat='enum', en='----------:', keyable=True)\nfirst_selected.SPREAD.set(lock=True)\nfirst_selected.addAttr('index_spread', keyable=True)\nfirst_selected.addAttr('middle_spread', keyable=True)\nfirst_selected.addAttr('pinky_spread', keyable=True)\nfirst_selected.addAttr('THUMB',\nat='enum', en='----------:', keyable=True)\nfirst_selected.THUMB.set(lock=True)\nfirst_selected.addAttr('thumb_curl', keyable=True)\nfirst_selected.addAttr('thumb_drop', keyable=True)\n" 
        -enableBackground 0
        -align "center" 
        -label "AddAttribute" 
        -labelOffset 0
        -font "plainLabelFont" 
        -imageOverlayLabel "AddAttribute" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.25 
        -image "pythonFamily.png" 
        -image1 "pythonFamily.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "selected = pm.ls(selection=True)\nprint 'Current Selected:', selected\n\nfirst_selected = selected[0]\nfirst_selected.addAttr('FINGERS',\nat='enum', en='----------:', keyable=True)\nfirst_selected.FINGERS.set(lock=True)\nfirst_selected.addAttr('CURL',\nat='enum', en='----------:', keyable=True)\nfirst_selected.CURL.set(lock=True)\nfirst_selected.addAttr('index_curl', keyable=True)\nfirst_selected.addAttr('middle_curl', keyable=True)\nfirst_selected.addAttr('pinky_curl', keyable=True)\nfirst_selected.addAttr('SPREAD',\nat='enum', en='----------:', keyable=True)\nfirst_selected.SPREAD.set(lock=True)\nfirst_selected.addAttr('index_spread', keyable=True)\nfirst_selected.addAttr('middle_spread', keyable=True)\nfirst_selected.addAttr('pinky_spread', keyable=True)\nfirst_selected.addAttr('THUMB',\nat='enum', en='----------:', keyable=True)\nfirst_selected.THUMB.set(lock=True)\nfirst_selected.addAttr('thumb_curl', keyable=True)\nfirst_selected.addAttr('thumb_drop', keyable=True)\n" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 34
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "import pymel.core as pm\n\npm.makeIdentity(apply=True, t=1, r=1, s=1, n=1, pn=1)\n" 
        -enableBackground 0
        -align "center" 
        -label "FreezeTransforms" 
        -labelOffset 0
        -font "plainLabelFont" 
        -imageOverlayLabel "FreezeTransforms" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.25 
        -image "pythonFamily.png" 
        -image1 "pythonFamily.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "import pymel.core as pm\n\npm.makeIdentity(apply=True, t=1, r=1, s=1, n=1, pn=1)\n" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 34
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "import pymel.core as pm\n\npm.delete(ch=True)\n" 
        -enableBackground 0
        -align "center" 
        -label "DelHistory" 
        -labelOffset 0
        -font "plainLabelFont" 
        -imageOverlayLabel "DelHistory" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.25 
        -image "pythonFamily.png" 
        -image1 "pythonFamily.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "import pymel.core as pm\n\npm.delete(ch=True)\n" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 34
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "import pymel.core as pm\n\npm.xform(cp=True)\n" 
        -enableBackground 0
        -align "center" 
        -label "cntPiv" 
        -labelOffset 0
        -font "plainLabelFont" 
        -imageOverlayLabel "cntPiv" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.25 
        -image "pythonFamily.png" 
        -image1 "pythonFamily.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "import pymel.core as pm\n\npm.xform(cp=True)\n" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 34
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "import pymel.core as pm\n\npm.ikHandle(sol='ikRPsolver', s=0)\n" 
        -enableBackground 0
        -align "center" 
        -label "IK Rotate Planar" 
        -labelOffset 0
        -font "plainLabelFont" 
        -imageOverlayLabel "IK Rotate Planar" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.25 
        -image "pythonFamily.png" 
        -image1 "pythonFamily.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "import pymel.core as pm\n\npm.ikHandle(sol='ikRPsolver', s=0)\n" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 34
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "import pymel.core as pm\n\npm.ikHandle(sol='ikSCsolver', s=0)\n" 
        -enableBackground 0
        -align "center" 
        -label "IKSingleChain" 
        -labelOffset 0
        -font "plainLabelFont" 
        -imageOverlayLabel "IKSingleChain" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.25 
        -image "pythonFamily.png" 
        -image1 "pythonFamily.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "import pymel.core as pm\n\npm.ikHandle(sol='ikSCsolver', s=0)\n" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 34
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "import pymel.core as pm\n\npm.cluster()\n" 
        -enableBackground 0
        -align "center" 
        -label "Clusters" 
        -labelOffset 0
        -font "plainLabelFont" 
        -imageOverlayLabel "Clusters" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.25 
        -image "pythonFamily.png" 
        -image1 "pythonFamily.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "import pymel.core as pm\n\npm.cluster()\n" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 34
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "import pymel.core as pm\n\npm.group()\n" 
        -enableBackground 0
        -align "center" 
        -label "Group" 
        -labelOffset 0
        -font "plainLabelFont" 
        -imageOverlayLabel "Group" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.25 
        -image "pythonFamily.png" 
        -image1 "pythonFamily.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "import pymel.core as pm\n\npm.group()\n" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 34
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "import pymel.core as pm\n\npm.parent()\n" 
        -enableBackground 0
        -align "center" 
        -label "Parent" 
        -labelOffset 0
        -font "plainLabelFont" 
        -imageOverlayLabel "Parent" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.25 
        -image "pythonFamily.png" 
        -image1 "pythonFamily.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "import pymel.core as pm\n\npm.parent()\n" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 34
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "import pymel.core as pm\n\npm.duplicate()\n" 
        -enableBackground 0
        -align "center" 
        -label "Duplicate" 
        -labelOffset 0
        -font "plainLabelFont" 
        -imageOverlayLabel "Duplicate" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.25 
        -image "pythonFamily.png" 
        -image1 "pythonFamily.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "import pymel.core as pm\n\npm.duplicate()\n" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 34
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "import pymel.core as pm\n\npm.circle(c=(0,0,0), nr=(0,1,0), sw=360, r=1, d=3, ut=0, tol=0, s=8, ch=1)\n" 
        -enableBackground 0
        -align "center" 
        -label "Circle" 
        -labelOffset 0
        -font "plainLabelFont" 
        -imageOverlayLabel "Circle" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.25 
        -image "pythonFamily.png" 
        -image1 "pythonFamily.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "import pymel.core as pm\n\npm.circle(c=(0,0,0), nr=(0,1,0), sw=360, r=1, d=3, ut=0, tol=0, s=8, ch=1)\n" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 34
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "import pymel.core as pm\n\nmel_code = \"curve -d 1 -p 0 0 0 -p 1 0 0 -p 1 0 -1 -p 0 0 -1 -p 0 0 0 -k 0 -k 1 -k 2 -k 3 -k 4;\"\npm.mel.eval(mel_code)\n" 
        -enableBackground 0
        -align "center" 
        -label "Square" 
        -labelOffset 0
        -font "plainLabelFont" 
        -imageOverlayLabel "Square" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.25 
        -image "pythonFamily.png" 
        -image1 "pythonFamily.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "import pymel.core as pm\n\nmel_code = \"curve -d 1 -p 0 0 0 -p 1 0 0 -p 1 0 -1 -p 0 0 -1 -p 0 0 0 -k 0 -k 1 -k 2 -k 3 -k 4;\"\npm.mel.eval(mel_code)\n" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 34
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "import pymel.core as pm\n\nmel_code = \"curve -d 1 -p 0.5 0.5 0.5 -p -0.5 0.5 0.5 -p -0.5 0.5 -0.5 -p 0.5 0.5 -0.5 -p 0.5 0.5 0.5 -p 0.5 -0.5 0.5 -p 0.5 -0.5 -0.5 -p 0.5 0.5 -0.5 -p 0.5 -0.5 0.5 -p -0.5 -0.5 0.5 -p -0.5 -0.5 -0.5 -p 0.5 -0.5 -0.5 -p -0.5 -0.5 -0.5 -p -0.5 0.5 -0.5 -p -0.5 0.5 0.5 -p -0.5 -0.5 0.5 -p -0.5 -0.5 -0.5 -p -0.5 0.5 -0.5 -p 0.5 0.5 -0.5 -p 0.5 0.5 0.5 -p -0.5 0.5 0.5 -p -0.5 0.5 -0.5 -k 0 -k 1 -k 2 -k 3 -k 4 -k 5 -k 6 -k 7 -k 8 -k 9 -k 10 -k 11 -k 12 -k 13 -k 14 -k 15 -k 16 -k 17 -k 18 -k 19 -k 20 -k 21 ;\"\npm.mel.eval(mel_code)\n" 
        -enableBackground 0
        -align "center" 
        -label "Cube" 
        -labelOffset 0
        -font "plainLabelFont" 
        -imageOverlayLabel "Cube" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.25 
        -image "pythonFamily.png" 
        -image1 "pythonFamily.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "import pymel.core as pm\n\nmel_code = \"curve -d 1 -p 0.5 0.5 0.5 -p -0.5 0.5 0.5 -p -0.5 0.5 -0.5 -p 0.5 0.5 -0.5 -p 0.5 0.5 0.5 -p 0.5 -0.5 0.5 -p 0.5 -0.5 -0.5 -p 0.5 0.5 -0.5 -p 0.5 -0.5 0.5 -p -0.5 -0.5 0.5 -p -0.5 -0.5 -0.5 -p 0.5 -0.5 -0.5 -p -0.5 -0.5 -0.5 -p -0.5 0.5 -0.5 -p -0.5 0.5 0.5 -p -0.5 -0.5 0.5 -p -0.5 -0.5 -0.5 -p -0.5 0.5 -0.5 -p 0.5 0.5 -0.5 -p 0.5 0.5 0.5 -p -0.5 0.5 0.5 -p -0.5 0.5 -0.5 -k 0 -k 1 -k 2 -k 3 -k 4 -k 5 -k 6 -k 7 -k 8 -k 9 -k 10 -k 11 -k 12 -k 13 -k 14 -k 15 -k 16 -k 17 -k 18 -k 19 -k 20 -k 21 ;\"\npm.mel.eval(mel_code)\n" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 34
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "import pymel.core as pm\n\nmel_code = \"curve -d 1 -p -0.0112317 0 0.0154087 -p -2.973494 0 2.959901 -p -0.0112317 0 0.0154087 -p -2.973494 0 2.959901 -p -2.959446 0 1.014276 -p -5.991247 0 0.995351 -p -5.975306 0 -1.063182 -p -2.961588 0 -1.023403 -p -2.945615 0 -3.00273 -p 0.0240137 0 -0.033468 -k 0 -k 1 -k 2 -k 3 -k 4 -k 5 -k 6 -k 7 -k 8 -k 9 ;\"\npm.mel.eval(mel_code)\n" 
        -enableBackground 0
        -align "center" 
        -label "Arrow" 
        -labelOffset 0
        -font "plainLabelFont" 
        -imageOverlayLabel "Arrow" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.25 
        -image "pythonFamily.png" 
        -image1 "pythonFamily.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "import pymel.core as pm\n\nmel_code = \"curve -d 1 -p -0.0112317 0 0.0154087 -p -2.973494 0 2.959901 -p -0.0112317 0 0.0154087 -p -2.973494 0 2.959901 -p -2.959446 0 1.014276 -p -5.991247 0 0.995351 -p -5.975306 0 -1.063182 -p -2.961588 0 -1.023403 -p -2.945615 0 -3.00273 -p 0.0240137 0 -0.033468 -k 0 -k 1 -k 2 -k 3 -k 4 -k 5 -k 6 -k 7 -k 8 -k 9 ;\"\npm.mel.eval(mel_code)\n" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 34
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "import pymel.core as pm\n\nselected = pm.ls(selection=True)\nprint 'current selected', selected\npm.parentConstraint(selected, maintainOffset=False)\n" 
        -enableBackground 0
        -align "center" 
        -label "Parent_Constrait Offset OFF" 
        -labelOffset 0
        -font "plainLabelFont" 
        -imageOverlayLabel "Parent_Constrait Offset OFF" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.25 
        -image "pythonFamily.png" 
        -image1 "pythonFamily.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "import pymel.core as pm\n\nselected = pm.ls(selection=True)\nprint 'current selected', selected\npm.parentConstraint(selected, maintainOffset=False)\n" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 34
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "import pymel.core as pm\n\nselected = pm.ls(selection=True)\nprint 'current selected', selected\npm.parentConstraint(selected, maintainOffset=True)\n" 
        -enableBackground 0
        -align "center" 
        -label "Parent Constraint Offset" 
        -labelOffset 0
        -font "plainLabelFont" 
        -imageOverlayLabel "Parent Constraint Offset" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.25 
        -image "pythonFamily.png" 
        -image1 "pythonFamily.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "import pymel.core as pm\n\nselected = pm.ls(selection=True)\nprint 'current selected', selected\npm.parentConstraint(selected, maintainOffset=True)\n" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 34
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "import pymel.core as pm\n\nselected = pm.ls(selection=True)\nprint 'current selected', selected\npm.orientConstraint(selected, maintainOffset=False)\n" 
        -enableBackground 0
        -align "center" 
        -label "OrientC Offset OFF" 
        -labelOffset 0
        -font "plainLabelFont" 
        -imageOverlayLabel "OrientC Offset OFF" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.25 
        -image "pythonFamily.png" 
        -image1 "pythonFamily.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "import pymel.core as pm\n\nselected = pm.ls(selection=True)\nprint 'current selected', selected\npm.orientConstraint(selected, maintainOffset=False)\n" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 34
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "import pymel.core as pm\n\nselected = pm.ls(selection=True)\nprint 'current selected', selected\npm.orientConstraint(selected, maintainOffset=True)\n" 
        -enableBackground 0
        -align "center" 
        -label "OrientC Offset" 
        -labelOffset 0
        -font "plainLabelFont" 
        -imageOverlayLabel "OrientC Offset" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.25 
        -image "pythonFamily.png" 
        -image1 "pythonFamily.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "import pymel.core as pm\n\nselected = pm.ls(selection=True)\nprint 'current selected', selected\npm.orientConstraint(selected, maintainOffset=True)\n" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 34
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "import pymel.core as pm\n\nselected = pm.ls(selection=True)\nprint 'current selected', selected\npm.pointConstraint(selected, maintainOffset=False)\n" 
        -enableBackground 0
        -align "center" 
        -label "PCoinstraint Off" 
        -labelOffset 0
        -font "plainLabelFont" 
        -imageOverlayLabel "PCoinstraint Off" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.25 
        -image "pythonFamily.png" 
        -image1 "pythonFamily.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "import pymel.core as pm\n\nselected = pm.ls(selection=True)\nprint 'current selected', selected\npm.pointConstraint(selected, maintainOffset=False)\n" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 34
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "import pymel.core as pm\n\nselected = pm.ls(selection=True)\nprint 'current selected', selected\npm.pointConstraint(selected, maintainOffset=True)\n" 
        -enableBackground 0
        -align "center" 
        -label "PConstraint Offset" 
        -labelOffset 0
        -font "plainLabelFont" 
        -imageOverlayLabel "PConstraint Offset" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.25 
        -image "pythonFamily.png" 
        -image1 "pythonFamily.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "import pymel.core as pm\n\nselected = pm.ls(selection=True)\nprint 'current selected', selected\npm.pointConstraint(selected, maintainOffset=True)\n" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 34
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "import pymel.core as pm\n\nselected = pm.ls(selection=True)\nprint 'current selected', selected\npm.poleVectorConstraint(selected)\n" 
        -enableBackground 0
        -align "center" 
        -label "PoleVector" 
        -labelOffset 0
        -font "plainLabelFont" 
        -imageOverlayLabel "PoleVector" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.25 
        -image "pythonFamily.png" 
        -image1 "pythonFamily.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "import pymel.core as pm\n\nselected = pm.ls(selection=True)\nprint 'current selected', selected\npm.poleVectorConstraint(selected)\n" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 34
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "import pymel.core as pm\n\nselected = pm.ls(selection=True)\nfirst_selected = selected[0]\nprint 'current selected', selected\n\nfirst_selected.addAttr('index_curl', keyable=True)\nfirst_selected.addAttr('middle_curl', keyable=True)\nfirst_selected.addAttr('pinky_curl', keyable=True)\n" 
        -enableBackground 0
        -align "center" 
        -label "FloatAttr" 
        -labelOffset 0
        -font "plainLabelFont" 
        -imageOverlayLabel "FloatAttr" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.25 
        -image "pythonFamily.png" 
        -image1 "pythonFamily.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "import pymel.core as pm\n\nselected = pm.ls(selection=True)\nfirst_selected = selected[0]\nprint 'current selected', selected\n\nfirst_selected.addAttr('index_curl', keyable=True)\nfirst_selected.addAttr('middle_curl', keyable=True)\nfirst_selected.addAttr('pinky_curl', keyable=True)\n" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 34
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "import pymel.core as pm\n\nselected = pm.ls(selection=True)\nfirst_selected = selected[0]\nprint 'current selected', selected\n\nfirst_selected.addAttr('FINGERS', keyable=True, at='enum', en=\"----------------------:\")\nfirst_selected.FINGERS.set(lock=True)\n" 
        -enableBackground 0
        -align "center" 
        -label "SeperateAttr" 
        -labelOffset 0
        -font "plainLabelFont" 
        -imageOverlayLabel "SeperateAttr" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.25 
        -image "pythonFamily.png" 
        -image1 "pythonFamily.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "import pymel.core as pm\n\nselected = pm.ls(selection=True)\nfirst_selected = selected[0]\nprint 'current selected', selected\n\nfirst_selected.addAttr('FINGERS', keyable=True, at='enum', en=\"----------------------:\")\nfirst_selected.FINGERS.set(lock=True)\n" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 34
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "import pymel.core as pm\n\nselected = pm.ls(selection=True)\nfirst_selected = selected[0]\nprint 'current selected', selected\n\nfirst_selected.addAttr('FINGERS', keyable=True, at='enum', en=\"----------------------:\")\nfirst_selected.FINGERS.set(lock=True)\nfirst_selected.addAttr('CURL', keyable=True, at='enum', en=\"----------------------:\")\nfirst_selected.CURL.set(lock=True)\nfirst_selected.addAttr('index_curl', keyable=True)\nfirst_selected.addAttr('middle_curl', keyable=True)\nfirst_selected.addAttr('pinky_curl', keyable=True)\n\nfirst_selected.addAttr('SPREAD', keyable=True, at='enum', en=\"----------------------:\")\nfirst_selected.SPREAD.set(lock=True)\nfirst_selected.addAttr('index_spread', keyable=True)\nfirst_selected.addAttr('middle_spread', keyable=True)\nfirst_selected.addAttr('pinky_spread', keyable=True)\n\nfirst_selected.addAttr('THUMB', keyable=True, at='enum', en=\"----------------------:\")\nfirst_selected.THUMB.set(lock=True)\nfirst_selected.addAttr('thumb_spread', keyable=True)\nfirst_selected.addAttr('thumb_curl', keyable=True)\n" 
        -enableBackground 0
        -align "center" 
        -label "AddingAttr" 
        -labelOffset 0
        -font "plainLabelFont" 
        -imageOverlayLabel "AddingAttr" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.25 
        -image "pythonFamily.png" 
        -image1 "pythonFamily.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "import pymel.core as pm\n\nselected = pm.ls(selection=True)\nfirst_selected = selected[0]\nprint 'current selected', selected\n\nfirst_selected.addAttr('FINGERS', keyable=True, at='enum', en=\"----------------------:\")\nfirst_selected.FINGERS.set(lock=True)\nfirst_selected.addAttr('CURL', keyable=True, at='enum', en=\"----------------------:\")\nfirst_selected.CURL.set(lock=True)\nfirst_selected.addAttr('index_curl', keyable=True)\nfirst_selected.addAttr('middle_curl', keyable=True)\nfirst_selected.addAttr('pinky_curl', keyable=True)\n\nfirst_selected.addAttr('SPREAD', keyable=True, at='enum', en=\"----------------------:\")\nfirst_selected.SPREAD.set(lock=True)\nfirst_selected.addAttr('index_spread', keyable=True)\nfirst_selected.addAttr('middle_spread', keyable=True)\nfirst_selected.addAttr('pinky_spread', keyable=True)\n\nfirst_selected.addAttr('THUMB', keyable=True, at='enum', en=\"----------------------:\")\nfirst_selected.THUMB.set(lock=True)\nfirst_selected.addAttr('thumb_spread', keyable=True)\nfirst_selected.addAttr('thumb_curl', keyable=True)\n" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;

} 
