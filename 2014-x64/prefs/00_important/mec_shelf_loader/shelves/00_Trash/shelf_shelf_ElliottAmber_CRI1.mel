global proc shelf_shelf_ElliottAmber_CRI1 () {
    global string $gBuffStr;
    global string $gBuffStr0;
    global string $gBuffStr1;


    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "User Script" 
        -enableBackground 0
        -align "center" 
        -label "Nuke" 
        -labelOffset 0
        -font "plainLabelFont" 
        -imageOverlayLabel "NUKE" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 1 
        -image "fire.png" 
        -image1 "fire.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "import pymel.core as pm  \npm.makeIdentity(apply=True, t=1,r=1,s=1,n=0)\npm.delete(all=True,ch=True)\npm.xform(cp=True)" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Select an object(s)" 
        -enableBackground 0
        -align "center" 
        -label "Freeze Transformations" 
        -labelOffset 0
        -font "plainLabelFont" 
        -imageOverlayLabel "FT" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 1 
        -image "menuIconModify.png" 
        -image1 "menuIconModify.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "import pymel.core as pm  \npm.makeIdentity(apply=True, t=1,r=1,s=1,n=0)" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Delete construction history on the selected object(s)" 
        -enableBackground 0
        -align "center" 
        -label "History" 
        -labelOffset 0
        -font "plainLabelFont" 
        -imageOverlayLabel "HIS" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 1 
        -image "menuIconEdit.png" 
        -image1 "menuIconEdit.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "import pymel.core as pm \npm.delete(all=True,ch=True)" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Select an object(s)" 
        -enableBackground 0
        -align "center" 
        -label "Center Pivot" 
        -labelOffset 0
        -font "plainLabelFont" 
        -imageOverlayLabel "CP" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 1 
        -image "menuIconModify.png" 
        -image1 "menuIconModify.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "import pymel.core as pm \npm.xform(cp=True)" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Create IK handle on joint chain" 
        -enableBackground 0
        -align "center" 
        -label "IK Handle Tool" 
        -labelOffset 0
        -font "plainLabelFont" 
        -imageOverlayLabel "IK" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 1 
        -image "kinHandle.png" 
        -image1 "kinHandle.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "import pymel.core as pm \npm.ikHandle(sol='ikSCsolver')" 
        -sourceType "python" 
        -doubleClickCommand "import pymel.core as pm \npm.ikHandle(sol='ikRPsolver')" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Select object(s)" 
        -enableBackground 0
        -align "center" 
        -label "Cluster" 
        -labelOffset 0
        -font "plainLabelFont" 
        -imageOverlayLabel "CSTR" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 1 
        -image "cluster.png" 
        -image1 "cluster.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "import pymel.core as pm \npm.cluster()" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "User Script" 
        -enableBackground 0
        -align "center" 
        -label "Circle" 
        -labelOffset 0
        -font "plainLabelFont" 
        -imageOverlayLabel "CIR" 
        -overlayLabelColor 1 1 1 
        -overlayLabelBackColor 0 0 1 1 
        -image "circle.png" 
        -image1 "circle.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "import pymel.core as pm\nmel_line='circle -c 0 0 0 -nr 0 1 0 -sw 360 -r 1 -d 3 -ut 0 -tol 0.01 -s 8 -ch 1;'\npm.mel.eval(mel_line)" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "User Script" 
        -enableBackground 0
        -align "center" 
        -label "Square" 
        -labelOffset 0
        -font "plainLabelFont" 
        -imageOverlayLabel "SQR" 
        -overlayLabelColor 1 1 1 
        -overlayLabelBackColor 0 0 1 1 
        -image "square.png" 
        -image1 "square.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "import pymel.core as pm\nmel_line='curve -d 1 -p -1 0 1 -p -1 0 -1 -p 1 0 -1 -p 1 0 1 -p -1 0 1 -k 0 -k 1 -k 2 -k 3 -k 4;'\npm.mel.eval(mel_line)" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Cube" 
        -enableBackground 0
        -align "center" 
        -label "Cube" 
        -labelOffset 0
        -font "plainLabelFont" 
        -imageOverlayLabel "CUBE" 
        -overlayLabelColor 1 1 1 
        -overlayLabelBackColor 0 0 1 1 
        -image "cube.png" 
        -image1 "cube.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "import pymel.core as pm\nmel_line='curve -d 1 -p -0.5 0.5 -0.5 -p -0.5 0.5 0.5 -p -0.5 -0.5 0.5 -p -0.5 -0.5 -0.5 -p -0.5 0.5 -0.5 -p 0.5 0.5 -0.5 -p 0.5 0.5 0.5 -p -0.5 0.5 0.5 -p -0.5 -0.5 0.5 -p 0.5 -0.5 0.5 -p 0.5 0.5 0.5 -p 0.5 -0.5 0.5 -p 0.5 -0.5 -0.5 -p 0.5 0.5 -0.5 -p 0.5 -0.5 -0.5 -p -0.5 -0.5 -0.5 -k 0 -k 1 -k 2 -k 3 -k 4 -k 5 -k 6 -k 7 -k 8 -k 9 -k 10 -k 11 -k 12 -k 13 -k 14 -k 15'\npm.mel.eval(mel_line)" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Arrow" 
        -enableBackground 0
        -align "center" 
        -label "Arrow" 
        -labelOffset 0
        -font "plainLabelFont" 
        -imageOverlayLabel "ARO" 
        -overlayLabelColor 1 1 1 
        -overlayLabelBackColor 0 0 1 1 
        -image "leftArrow.png" 
        -image1 "leftArrow.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "import pymel.core as pm\nmel_line='curve -d 1 -p -3 0 -11 -p 0 0 -7 -p -2 0 -7 -p -2 0 -4 -p -4 0 -4 -p -4 0 -7 -p -6 0 -7 -p -3 0 -11 -k 0 -k 1 -k 2 -k 3 -k 4 -k 5 -k 6 -k 7;'\npm.mel.eval(mel_line)" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "User Script" 
        -enableBackground 0
        -align "center" 
        -label "ParentConstraint" 
        -labelOffset 0
        -font "plainLabelFont" 
        -imageOverlayLabel "PRT" 
        -overlayLabelColor 0 0 0 
        -overlayLabelBackColor 1 0 1 1 
        -image "parentConstraint.png" 
        -image1 "parentConstraint.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "import pymel.core as pm\nselected=pm.ls(selection=True) \n'object1', selected[0]\n'object2', selected[1]\npm.parentConstraint(selected [0],selected[1],mo=True)" 
        -sourceType "python" 
        -doubleClickCommand "import pymel.core as pm\nselected=pm.ls(selection=True) \n'object1', selected[0]\n'object2', selected[1]\npm.parentConstraint(selected [0],selected[1],mo=False)" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "User Script" 
        -enableBackground 0
        -align "center" 
        -label "OrientConstraint" 
        -labelOffset 0
        -font "plainLabelFont" 
        -imageOverlayLabel "ORT" 
        -overlayLabelColor 0 0 0 
        -overlayLabelBackColor 1 0 1 1 
        -image "orientConstraint.png" 
        -image1 "orientConstraint.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "import pymel.core as pm\nselected=pm.ls(selection=True) \n'object1', selected[0]\n'object2', selected[1]\npm.orientConstraint(selected [0],selected[1],mo=True)" 
        -sourceType "python" 
        -doubleClickCommand "import pymel.core as pm\nselected=pm.ls(selection=True) \n'object1', selected[0]\n'object2', selected[1]\npm.orientConstraint(selected [0],selected[1],mo=False)" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "User Script" 
        -enableBackground 0
        -align "center" 
        -label "PointConstraint" 
        -labelOffset 0
        -font "plainLabelFont" 
        -imageOverlayLabel "PNT" 
        -overlayLabelColor 0 0 0 
        -overlayLabelBackColor 1 0 1 1 
        -image "parentConstraint.png" 
        -image1 "parentConstraint.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "import pymel.core as pm\nselected=pm.ls(selection=True) \n'object1', selected[0]\n'object2', selected[1]\npm.pointConstraint(selected [0],selected[1],mo=True)" 
        -sourceType "python" 
        -doubleClickCommand "import pymel.core as pm\nselected=pm.ls(selection=True) \n'object1', selected[0]\n'object2', selected[1]\npm.pointConstraint(selected [0],selected[1],mo=False)" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "User Script" 
        -enableBackground 0
        -align "center" 
        -label "PoleVectorConstraint" 
        -labelOffset 0
        -font "plainLabelFont" 
        -imageOverlayLabel "PVC" 
        -overlayLabelColor 0 0 0 
        -overlayLabelBackColor 1 0 1 1 
        -image "poleVectorConstraint.png" 
        -image1 "poleVectorConstraint.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "import pymel.core as pm\nselected=pm.ls(selection=True) \npm.poleVectorConstraint(selected [0],selected[1])" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "User Script" 
        -enableBackground 0
        -align "center" 
        -label "FloatAttribute" 
        -labelOffset 0
        -font "plainLabelFont" 
        -imageOverlayLabel "Fatt" 
        -overlayLabelColor 0 0 0 
        -overlayLabelBackColor 0 1 1 0.9 
        -image "attributes.png" 
        -image1 "attributes.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "import pymel.core as pm\nselected=pm.ls(selection=True)\nfirst_selected=selected[0]\nprint 'First Selected Object:', first_selected\n\nfirst_selected.addAttr('FLOAT', keyable=True)" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "User Script" 
        -enableBackground 0
        -align "center" 
        -label "SeparatorAttribute" 
        -labelOffset 0
        -font "plainLabelFont" 
        -imageOverlayLabel "Eatt" 
        -overlayLabelColor 0 0 0 
        -overlayLabelBackColor 0 1 1 1 
        -image "attributes.png" 
        -image1 "attributes.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "import pymel.core as pm\nselected=pm.ls(selection=True)\nfirst_selected=selected[0]\nprint 'First Selected Object:', first_selected\n\nattribute_name=raw_input()\nfirst_selected.addAttr(attribute_name, keyable=True, at='enum', en=\"-------:\")" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "User Script" 
        -enableBackground 0
        -align "center" 
        -label "Template" 
        -labelOffset 0
        -font "plainLabelFont" 
        -imageOverlayLabel "Tatt" 
        -overlayLabelColor 0 0 0 
        -overlayLabelBackColor 0 1 1 1 
        -image "attributes.png" 
        -image1 "attributes.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "import pymel.core as pm\nselected=pm.ls(selection=True)\nfirst_selected=selected[0]\nprint 'First Selected Object:', first_selected\n\nfirst_selected.addAttr('FLOAT', keyable=True, at='enum', en=\"-------:\")\nfirst_selected.FLOAT.set(lock=True)\n\nattribute_name=raw_input()\nfirst_selected.addAttr(attribute_name, keyable=True)" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "User Script" 
        -enableBackground 0
        -align "center" 
        -label "GroupAttribute" 
        -labelOffset 0
        -font "plainLabelFont" 
        -imageOverlayLabel "Gatt" 
        -overlayLabelColor 0 0 0 
        -overlayLabelBackColor 0 1 1 1 
        -image "attributes.png" 
        -image1 "attributes.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "import pymel.core as pm\nselected=pm.ls(selection=True)\nfirst_selected=selected[0]\nprint 'First Selected Object:', first_selected\n\nattribute_name=raw_input()\nfirst_selected.addAttr(attribute_name, keyable=True)\nattribute_name=raw_input()\nfirst_selected.addAttr(attribute_name, keyable=True)\nattribute_name=raw_input()\nfirst_selected.addAttr(attribute_name, keyable=True)\nattribute_name=raw_input()\nfirst_selected.addAttr(attribute_name, keyable=True)\nattribute_name=raw_input()\nfirst_selected.addAttr(attribute_name, keyable=True)" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "User Script" 
        -enableBackground 0
        -align "center" 
        -label "FingerAttribute" 
        -labelOffset 0
        -font "plainLabelFont" 
        -imageOverlayLabel "Fngr" 
        -overlayLabelColor 0 0 0 
        -overlayLabelBackColor 0 1 1 1 
        -image "attributes.png" 
        -image1 "attributes.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "import pymel.core as pm\nselected=pm.ls(selection=True)\nfirst_selected=selected[0]\n\nfirst_selected.addAttr('FINGERS', keyable=True, at='enum', en=\"-------:\")\nfirst_selected.FINGERS.set(lock=True)\n\nfirst_selected.addAttr('CURL', keyable=True, at='enum', en=\"-------:\")\nfirst_selected.CURL.set(lock=True)\n\nfirst_selected.addAttr('Index', keyable=True)\nfirst_selected.addAttr('Middle', keyable=True)\nfirst_selected.addAttr('Pinky', keyable=True)\n\nfirst_selected.addAttr('SPREAD', keyable=True, at='enum', en=\"-------:\")\nfirst_selected.SPREAD.set(lock=True)\n\nfirst_selected.addAttr('index', keyable=True)\nfirst_selected.addAttr('middle', keyable=True)\nfirst_selected.addAttr('pinky', keyable=True)\n\n\nfirst_selected.addAttr('THUMB', keyable=True, at='enum', en=\"-------:\")\nfirst_selected.THUMB.set(lock=True)\n\nfirst_selected.addAttr('drop', keyable=True)\nfirst_selected.addAttr('curl', keyable=True)" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "User Script" 
        -enableBackground 0
        -align "center" 
        -label "ColorBlue" 
        -labelOffset 0
        -font "plainLabelFont" 
        -imageOverlayLabel "BLUE" 
        -overlayLabelColor 0 0 0 
        -overlayLabelBackColor 0 1 0 1 
        -image "colorPickCursor.png" 
        -image1 "colorPickCursor.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "import pymel.core as pm\nselected=pm.ls(selection=True)\nfirst_selected=selected[0]\nprint 'First Selected Object:', first_selected\n\nfirst_selected.overrideEnabled.set(1)\nblue=6\nfirst_selected.overrideColor.set(blue)\n" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "User Script" 
        -enableBackground 0
        -align "center" 
        -label "ColorRed" 
        -labelOffset 0
        -font "plainLabelFont" 
        -imageOverlayLabel "RED" 
        -overlayLabelColor 0 0 0 
        -overlayLabelBackColor 0 1 0 1 
        -image "colorPickCursor.png" 
        -image1 "colorPickCursor.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "import pymel.core as pm\nselected=pm.ls(selection=True)\nfirst_selected=selected[0]\nprint 'First Selected Object:', first_selected\n\nfirst_selected.overrideEnabled.set(1)\nred=13\nfirst_selected.overrideColor.set(red)\n" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "User Script" 
        -enableBackground 0
        -align "center" 
        -label "ColorYellow" 
        -labelOffset 0
        -font "plainLabelFont" 
        -imageOverlayLabel "YLW" 
        -overlayLabelColor 0 0 0 
        -overlayLabelBackColor 0 1 0 1 
        -image "colorPickCursor.png" 
        -image1 "colorPickCursor.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "import pymel.core as pm\nselected=pm.ls(selection=True)\nfirst_selected=selected[0]\nprint 'First Selected Object:', first_selected\n\nfirst_selected.overrideEnabled.set(1)\nyellow=17\nfirst_selected.overrideColor.set(yellow)\n" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;

} 
