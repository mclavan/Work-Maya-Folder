global proc shelf_CRI_1405 () {
    global string $gBuffStr;
    global string $gBuffStr0;
    global string $gBuffStr1;


    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 34
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Nuke Buttons" 
        -enableBackground 0
        -align "center" 
        -label "Nuke" 
        -labelOffset 0
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.2 
        -image "textureEditorCloseBar.png" 
        -image1 "textureEditorCloseBar.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "print(\"User defined macro\");" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "import pymel.core as pm\npm.makeIdentity(apply=True, t=1, r=1, s=1, n=0)\n" 
        -enableBackground 0
        -align "center" 
        -label "FREEZE" 
        -labelOffset 0
        -font "plainLabelFont" 
        -imageOverlayLabel "FREEZE" 
        -overlayLabelColor 0.986577 0.986577 0.986577 
        -overlayLabelBackColor 0 0 0 0.9 
        -image "srt.png" 
        -image1 "srt.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "import pymel.core as pm\npm.makeIdentity(apply=True, t=1, r=1, s=1, n=0)\n" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "import pymel.core as pm\npm.delete(ch=True)" 
        -enableBackground 0
        -align "center" 
        -label "DelHis" 
        -labelOffset 0
        -font "plainLabelFont" 
        -imageOverlayLabel "DelHis" 
        -overlayLabelColor 1 1 1 
        -overlayLabelBackColor 0 0 0 0 
        -image "deleteActive.png" 
        -image1 "deleteActive.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "import pymel.core as pm\npm.delete(ch=True)" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "import pymel.core as pm\npm.xform(cp=True)" 
        -enableBackground 0
        -align "center" 
        -label "CenPiv" 
        -labelOffset 0
        -font "plainLabelFont" 
        -imageOverlayLabel "CenPiv" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.25 
        -image "trackCursor.png" 
        -image1 "trackCursor.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "import pymel.core as pm\npm.xform(cp=True)" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 34
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Curve Tools" 
        -enableBackground 0
        -align "center" 
        -label "Curve Tools" 
        -labelOffset 0
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.2 
        -image "textureEditorCloseBar.png" 
        -image1 "textureEditorCloseBar.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "print(\"User defined macro\");" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "import pymel.core as pm\npm.ikHandle(solver='ikSCsolver')" 
        -enableBackground 0
        -align "center" 
        -label "SC" 
        -labelOffset 0
        -font "plainLabelFont" 
        -imageOverlayLabel "SC" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 1 
        -image "curveCV.png" 
        -image1 "curveCV.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "import pymel.core as pm\npm.ikHandle(solver='ikSCsolver')" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "import pymel.core as pm\npm.ikHandle()" 
        -enableBackground 0
        -align "center" 
        -label "RP" 
        -labelOffset 0
        -font "plainLabelFont" 
        -imageOverlayLabel "RP" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 1 
        -image "curveCV.png" 
        -image1 "curveCV.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "import pymel.core as pm\npm.ikHandle()" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "import pymel.core as pm\npm.cluster()\n" 
        -enableBackground 0
        -align "center" 
        -label "ClusCur" 
        -labelOffset 0
        -font "plainLabelFont" 
        -imageOverlayLabel "ClusCur" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.25 
        -image "cluster.png" 
        -image1 "cluster.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "import pymel.core as pm\npm.cluster()\n" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 34
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Control Shapes" 
        -enableBackground 0
        -align "center" 
        -label "Controls" 
        -labelOffset 0
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.2 
        -image "textureEditorCloseBar.png" 
        -image1 "textureEditorCloseBar.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "print(\"User defined macro\");" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "import pymel.core as pm\npm.circle()" 
        -enableBackground 0
        -align "center" 
        -label "Circle" 
        -labelOffset 0
        -font "plainLabelFont" 
        -imageOverlayLabel "Circle" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.25 
        -image "circle.png" 
        -image1 "circle.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "import pymel.core as pm\npm.circle()" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "import pymel.core as pm\nmel_line = 'curve -d 1 -p -1 0 -1 -p 1 0 -1 -p 1 0 1 -p -1 0 1 -p -1 0 -1 -k 0 -k 1 -k 2 -k 3 -k 4 ;;'\npm.mel.eval(mel_line)" 
        -enableBackground 0
        -align "center" 
        -label "Square" 
        -labelOffset 0
        -font "plainLabelFont" 
        -imageOverlayLabel "Square" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.25 
        -image "square.png" 
        -image1 "square.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "import pymel.core as pm\nmel_line = 'curve -d 1 -p -1 0 -1 -p 1 0 -1 -p 1 0 1 -p -1 0 1 -p -1 0 -1 -k 0 -k 1 -k 2 -k 3 -k 4 ;;'\npm.mel.eval(mel_line)" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "import pymel.core as pm\nmel_line='curve -d 1 -p -0.5 0.5 0.5 -p 0.5 0.5 0.5 -p 0.5 -0.5 0.5 -p -0.5 -0.5 0.5 -p -0.5 0.5 0.5 -p -0.5 0.5 -0.5 -p 0.5 0.5 -0.5 -p 0.5 0.5 0.5 -p 0.5 -0.5 0.5 -p 0.5 -0.5 -0.5 -p 0.5 0.5 -0.5 -p 0.5 -0.5 -0.5 -p -0.5 -0.5 -0.5 -p -0.5 0.5 -0.5 -p -0.5 -0.5 -0.5 -p -0.5 -0.5 0.5 -p -0.5 0.5 0.5 -p -0.5 0.5 -0.5 -k 0 -k 1 -k 2 -k 3 -k 4 -k 5 -k 6 -k 7 -k 8 -k 9 -k 10 -k 11 -k 12 -k 13 -k 14 -k 15 -k 16 -k 17 ;'\npm.mel.eval(mel_line)" 
        -enableBackground 0
        -align "center" 
        -label "Cube" 
        -labelOffset 0
        -font "plainLabelFont" 
        -imageOverlayLabel "Cube" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.25 
        -image "cube.png" 
        -image1 "cube.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "import pymel.core as pm\nmel_line='curve -d 1 -p -0.5 0.5 0.5 -p 0.5 0.5 0.5 -p 0.5 -0.5 0.5 -p -0.5 -0.5 0.5 -p -0.5 0.5 0.5 -p -0.5 0.5 -0.5 -p 0.5 0.5 -0.5 -p 0.5 0.5 0.5 -p 0.5 -0.5 0.5 -p 0.5 -0.5 -0.5 -p 0.5 0.5 -0.5 -p 0.5 -0.5 -0.5 -p -0.5 -0.5 -0.5 -p -0.5 0.5 -0.5 -p -0.5 -0.5 -0.5 -p -0.5 -0.5 0.5 -p -0.5 0.5 0.5 -p -0.5 0.5 -0.5 -k 0 -k 1 -k 2 -k 3 -k 4 -k 5 -k 6 -k 7 -k 8 -k 9 -k 10 -k 11 -k 12 -k 13 -k 14 -k 15 -k 16 -k 17 ;'\npm.mel.eval(mel_line)" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "import pymel.core as pm\nmel_line='curve -d 1 -p 1 0 0 -p 2 0 0 -p 0 0 2 -p -2 0 0 -p -1 0 0 -p -1 0 -2 -p 1 0 -2 -p 1 0 0 -k 0 -k 1 -k 2 -k 3 -k 4 -k 5 -k 6 -k 7 ;'\npm.mel.eval(mel_line)" 
        -enableBackground 0
        -align "center" 
        -label "Arrow" 
        -labelOffset 0
        -font "plainLabelFont" 
        -imageOverlayLabel "Arrow" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.25 
        -image "rmbMenu.png" 
        -image1 "rmbMenu.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "import pymel.core as pm\nmel_line='curve -d 1 -p 1 0 0 -p 2 0 0 -p 0 0 2 -p -2 0 0 -p -1 0 0 -p -1 0 -2 -p 1 0 -2 -p 1 0 0 -k 0 -k 1 -k 2 -k 3 -k 4 -k 5 -k 6 -k 7 ;'\npm.mel.eval(mel_line)" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 34
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "User Script" 
        -enableBackground 0
        -align "center" 
        -label "Constraints" 
        -labelOffset 0
        -font "plainLabelFont" 
        -imageOverlayLabel "Constraints" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.2 
        -image "textureEditorCloseBar.png" 
        -image1 "textureEditorCloseBar.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "print(\"User defined macro\");" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "import pymel.core as pm\npm.parentConstraint()" 
        -enableBackground 0
        -align "center" 
        -label "ParCon" 
        -labelOffset 0
        -font "plainLabelFont" 
        -imageOverlayLabel "ParCon" 
        -overlayLabelColor 1 1 1 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "addSkinInfluence.png" 
        -image1 "addSkinInfluence.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "import pymel.core as pm\npm.parentConstraint()" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "import pymel.core as pm\npm.orientConstraint()" 
        -enableBackground 0
        -align "center" 
        -label "OriCon" 
        -labelOffset 0
        -font "plainLabelFont" 
        -imageOverlayLabel "OriCon" 
        -overlayLabelColor 1 1 1 
        -overlayLabelBackColor 0 0 0 0.2 
        -image "orientConstraint.png" 
        -image1 "orientConstraint.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "import pymel.core as pm\npm.orientConstraint()" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "import pymel.core as pm\npm.pointConstraint()" 
        -enableBackground 0
        -align "center" 
        -label "PoiCon" 
        -labelOffset 0
        -font "plainLabelFont" 
        -imageOverlayLabel "PoiCon" 
        -overlayLabelColor 1 1 1 
        -overlayLabelBackColor 0 0 0 0.4 
        -image "pointToPoint.png" 
        -image1 "pointToPoint.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "import pymel.core as pm\npm.pointConstraint()" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "import pymel.core as pm\npm.poleVectorConstraint()\n" 
        -enableBackground 0
        -align "center" 
        -label "PoleV" 
        -labelOffset 0
        -font "plainLabelFont" 
        -imageOverlayLabel "PoleV" 
        -overlayLabelColor 1 1 1 
        -overlayLabelBackColor 0 0 0 0.2 
        -image "poleVectorConstraint.png" 
        -image1 "poleVectorConstraint.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "import pymel.core as pm\npm.poleVectorConstraint()\n" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 34
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "User Script" 
        -enableBackground 0
        -align "center" 
        -label "Attributes" 
        -labelOffset 0
        -font "plainLabelFont" 
        -imageOverlayLabel "Attributes" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.2 
        -image "textureEditorCloseBar.png" 
        -image1 "textureEditorCloseBar.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "print(\"User defined macro\");" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 34
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "import pymel.core as pm\nattribute_name = raw_input()\nfirst_selected.addAttr(attribute_name, keyable=True)\n" 
        -enableBackground 0
        -align "center" 
        -label "NewAtt" 
        -labelOffset 0
        -font "plainLabelFont" 
        -imageOverlayLabel "NewAtt" 
        -overlayLabelColor 1 1 1 
        -overlayLabelBackColor 0 0 0 0.2 
        -image "text.png" 
        -image1 "text.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "import pymel.core as pm\nattribute_name = raw_input()\nfirst_selected.addAttr(attribute_name, keyable=True)\n" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;

} 
