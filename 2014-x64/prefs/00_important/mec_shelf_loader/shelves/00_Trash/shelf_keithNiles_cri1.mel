global proc shelf_keithNiles_cri1 () {
    global string $gBuffStr;
    global string $gBuffStr0;
    global string $gBuffStr1;


    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Delete construction history on the selected object(s)" 
        -enableBackground 0
        -align "center" 
        -label "History" 
        -labelOffset 0
        -font "plainLabelFont" 
        -imageOverlayLabel "Hist" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.2 
        -image "menuIconEdit.png" 
        -image1 "menuIconEdit.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "import pymel.core as pm\npm.delete(all=True, ch=True)" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Select an object(s)" 
        -enableBackground 0
        -align "center" 
        -label "Freeze Transformations" 
        -labelOffset 0
        -font "plainLabelFont" 
        -imageOverlayLabel "FT" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.2 
        -image "menuIconModify.png" 
        -image1 "menuIconModify.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "import pymel.core as pm\npm.makeIdentity(apply=True, translate=1, rotate=1, scale=1, normal=0)" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Select an object(s)" 
        -enableBackground 0
        -align "center" 
        -label "Center Pivot" 
        -labelOffset 0
        -font "plainLabelFont" 
        -imageOverlayLabel "CP" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.2 
        -image "menuIconModify.png" 
        -image1 "menuIconModify.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "import pymel.core as pm\npm.xform(centerPivots=1)" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 25
        -height 18
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Delete construction history on the selected object(s)" 
        -enableBackground 1
        -align "center" 
        -label "History" 
        -labelOffset 0
        -font "plainLabelFont" 
        -imageOverlayLabel "----" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.2 
        -image "autoKeyframeOn.png" 
        -image1 "autoKeyframeOn.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Create IK handle on joint chain" 
        -enableBackground 0
        -align "center" 
        -label "IK Handle Tool" 
        -labelOffset 0
        -font "plainLabelFont" 
        -imageOverlayLabel "SC" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.2 
        -image "kinHandle.png" 
        -image1 "kinHandle.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "import pymel.core as pm\npm.ikHandle(solver='ikSCsolver')" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Create IK handle on joint chain" 
        -enableBackground 0
        -align "center" 
        -label "IK Handle Tool" 
        -labelOffset 0
        -font "plainLabelFont" 
        -imageOverlayLabel "RP" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.2 
        -image "kinHandle.png" 
        -image1 "kinHandle.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "import pymel.core as pm\npm.ikHandle(solver='ikRPsolver')" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 25
        -height 18
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Delete construction history on the selected object(s)" 
        -enableBackground 1
        -align "center" 
        -label "History" 
        -labelOffset 0
        -font "plainLabelFont" 
        -imageOverlayLabel "----" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.2 
        -image "autoKeyframeOn.png" 
        -image1 "autoKeyframeOn.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Create a NURBS circle on the grid" 
        -enableBackground 0
        -align "center" 
        -label "Circle" 
        -labelOffset 0
        -font "plainLabelFont" 
        -imageOverlayLabel "Circle" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.2 
        -image "circle.png" 
        -image1 "circle.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "import pymel.core as pm\npm.circle(nr=(0, 0, 1), c=(0, 0, 0) )" 
        -sourceType "python" 
        -doubleClickCommand "CreateNURBSCircleOptions" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Create a NURBS square on the grid" 
        -enableBackground 0
        -align "center" 
        -label "Square" 
        -labelOffset 0
        -font "plainLabelFont" 
        -imageOverlayLabel "Square" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.2 
        -image "square.png" 
        -image1 "square.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "import pymel.core as pm\npm.nurbsSquare(nr=(0, 0, 1), c=(0, 0, 0))" 
        -sourceType "python" 
        -doubleClickCommand "CreateNURBSSquareOptions" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Create a NURBS cube on the grid" 
        -enableBackground 0
        -align "center" 
        -label "Cube" 
        -labelOffset 0
        -font "plainLabelFont" 
        -imageOverlayLabel "Cube" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.2 
        -image "cube.png" 
        -image1 "cube.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "import pymel.core as pm\npm.nurbsCube(nr=(0, 0, 1), c=(0, 0, 0,))" 
        -sourceType "python" 
        -doubleClickCommand "CreateNURBSCubeOptions" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "import pymel.core as pm\nmel_line= 'curve -d 1 -p 0 0 0 -p -2 0 -2 -p -1 0 -2 -p -1 0 -5 -p 1 0 -5 -p 1 0 -2 -p 2 0 -2 -p 0 0 0 -k 0 -k 1 -k 2 -k 3 -k 4 -k 5 -k 6 -k 7 ;'\npm.mel.eval(mel_line)\narrow;" 
        -enableBackground 0
        -align "center" 
        -label "Arrow" 
        -labelOffset 0
        -font "plainLabelFont" 
        -imageOverlayLabel "Arrow" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.25 
        -image "dollyCursor.png" 
        -image1 "dollyCursor.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "import pymel.core as pm\nmel_line= 'curve -d 1 -p 0 0 0 -p -2 0 -2 -p -1 0 -2 -p -1 0 -5 -p 1 0 -5 -p 1 0 -2 -p 2 0 -2 -p 0 0 0 -k 0 -k 1 -k 2 -k 3 -k 4 -k 5 -k 6 -k 7 ;'\npm.mel.eval(mel_line)\narrow;" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 25
        -height 18
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Delete construction history on the selected object(s)" 
        -enableBackground 1
        -align "center" 
        -label "History" 
        -labelOffset 0
        -font "plainLabelFont" 
        -imageOverlayLabel "----" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.2 
        -image "autoKeyframeOn.png" 
        -image1 "autoKeyframeOn.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Select one or more targets followed by the object to constrain." 
        -enableBackground 0
        -align "center" 
        -label "Parent" 
        -labelOffset 0
        -font "plainLabelFont" 
        -imageOverlayLabel "PC" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.2 
        -image "parentConstraint.png" 
        -image1 "parentConstraint.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "import pymel.core as pm\npm.parentConstraint(maintainOffset=True, weight=1)" 
        -sourceType "python" 
        -doubleClickCommand "import pymel.core as pm\npm.parentConstraint(maintainOffset=False, weight=1)" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Select one or more targets followed by the object to constrain." 
        -enableBackground 0
        -align "center" 
        -label "Orient" 
        -labelOffset 0
        -font "plainLabelFont" 
        -imageOverlayLabel "OC" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.2 
        -image "orientConstraint.png" 
        -image1 "orientConstraint.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "import pymel.core as pm\npm.orientConstraint(maintainOffset=True, weight=True)" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Select one or more targets followed by the object to constrain." 
        -enableBackground 0
        -align "center" 
        -label "Point" 
        -labelOffset 0
        -font "plainLabelFont" 
        -imageOverlayLabel "PointC" 
        -overlayLabelColor 0.751678 0.751678 0.751678 
        -overlayLabelBackColor 0 0 0 0.2 
        -image "posConstraint.png" 
        -image1 "posConstraint.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "import pymel.core as pm\npm.pointConstraint(maintainOffset=True, weight=True)" 
        -sourceType "python" 
        -doubleClickCommand "import pymel.core as pm\npm.pointConstraint(maintainOffset=False, weight=True)" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 25
        -height 18
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Delete construction history on the selected object(s)" 
        -enableBackground 1
        -align "center" 
        -label "History" 
        -labelOffset 0
        -font "plainLabelFont" 
        -imageOverlayLabel "----" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.2 
        -image "autoKeyframeOn.png" 
        -image1 "autoKeyframeOn.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Detach selected components" 
        -enableBackground 0
        -align "center" 
        -label "Detach Component" 
        -labelOffset 0
        -font "plainLabelFont" 
        -imageOverlayLabel "DC" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.2 
        -image "polySplitVertex.png" 
        -image1 "polySplitVertex.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "pm.mel.DetachComponent()" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Separate the selected polygon object shells or the shells of any selected faces from the object into distinct objects" 
        -enableBackground 0
        -align "center" 
        -label "Separate" 
        -labelOffset 0
        -font "plainLabelFont" 
        -imageOverlayLabel "SEP" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.2 
        -image "polySeparate.png" 
        -image1 "polySeparate.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "pm.polySeparate(constructionHistory=1)" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;

} 
